# specify the version of docker-compose
version: '3.8'

# define the services to be run
services:
  db:
    build: ./mongodb-rs
    container_name: masterjus_db
    command: ["mongod", "--auth", "--bind_ip_all", "--replSet", "rs0"]
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Masterjus2024
      MONGO_INITDB_DATABASE: admin
      MONGO_REPLICA_HOST: masterjus_db
      MONGO_REPLICA_PORT: 27017
    ports:
      - "27017:27017"
    # volumes:
    #   - mongodb_data:/data/db
  web:
    # we use depends_on to specify that service depends on another service
    # in this case, we specify that the web depends on the mongo service
    # this means that the mongo service will be started before the web service
    depends_on:
      - db

    # specify the environment variables for the web service
    # these environment variables will be available inside the container
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_JWT_SECRET=${NEXTAUTH_JWT_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}

    # specify the build context for the web service
    # this is the directory where the Dockerfile for the web service is located
    build:
      context: .
      dockerfile: Dockerfile

    # specify the ports to expose for the web service
    # the first number is the port on the host machine
    # the second number is the port inside the container
    ports:
      - 3000:3000

    # this is for docker compose watch mode
    # anything mentioned under develop will be watched for changes by docker compose watch
    # and it will perform the action mentioned
    develop:
      # we specify the files to watch for changes
      watch:
        - path: ./package.json
          action: rebuild
        - path: ./next.config.js
          action: rebuild
        - path: ./package-lock.json
          action: rebuild
          # it'll watch for changes in the frontend directory and sync the changes with the container real time
        - path: .
          target: /app
          action: sync
